<!-- 	author: Ethan Gruber, American Numismatic Society 
	last modified: August, 2011
	function: Enable the user to upload an image file or select a flickr image URI.  If the former option is chosen, base64-encoded images are sent to remotemagick.py for resizing into thumbnails and reference images by imagemagick.
-->
<xbl:xbl xmlns="http://www.w3.org/1999/xhtml" xmlns:xforms="http://www.w3.org/2002/xforms" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:xxforms="http://orbeon.org/oxf/xml/xforms"
	xmlns:fr="http://orbeon.org/oxf/xml/form-runner" xmlns:xbl="http://www.w3.org/ns/xbl" xmlns:xxbl="http://orbeon.org/oxf/xml/xbl" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	xmlns:oxf="http://www.orbeon.com/oxf/processors" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:date="http://exslt.org/dates-and-times"
	xmlns:numishare="https://github.com/ewg118/numishare" xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<xbl:binding id="numishare-file-upload" element="numishare|file-upload">
		<xbl:template>	
			<xforms:group xbl:attr="model context ref bind" xxbl:scope="outer">
				<xbl:content includes="xforms|label,xforms|help,xforms|hint,xforms|alert"/>
				<xforms:group xxbl:scope="inner">
					<xforms:var name="binding" as="node()?">
						<xxforms:sequence select="." xxbl:scope="outer"/>
					</xforms:var>
					<xforms:action ev:event="xforms-enabled" ev:target="#observer">
						<xforms:insert context="instance('control-instance')" nodeset="collection-name" position="after"
							origin="xxforms:call-xpl('oxf:/apps/numishare/xpl/get-authentication.xpl', 'dump', instance('dump'), 'data')"/>
						<xforms:send submission="load-collections"/>
					</xforms:action>
					<xforms:var name="created" select="current-dateTime()"/>
					<!-- display warnings -->
					<xforms:group ref="$binding[instance('flickr-response')/@stat='fail' and not(instance('control-instance')/remotemagick-available='false')]">
						<div class="ui-widget">
							<div class="ui-state-error ui-corner-all">
								<p>
									<span class="ui-icon ui-icon-alert" style="float: left; margin-right: 0.3em;"/>
									<strong>Alert:</strong>
									<xforms:output ref="instance('flickr-response')/err/@msg"/>
								</p>
							</div>
						</div>
					</xforms:group>
					<xforms:group ref="$binding[instance('flickr-response')/@stat='ok' and instance('control-instance')/remotemagick-available='false']">
						<div class="ui-widget">
							<div class="ui-state-highlight ui-corner-all">
								<p>
									<span class="ui-icon ui-icon-info" style="float: left; margin-right: 0.3em;"/>
									<strong>Warning:</strong> Imagemagick is not running. Image uploads are disabled! </p>
							</div>
						</div>
					</xforms:group>


					<xforms:group ref="$binding[not(string(mets:file[@USE='thumbnail']/mets:FLocat/@xlink:href))]">
						<div class="ui-widget">
							<div class="ui-state-highlight ui-corner-all">
								<p>
									<span class="ui-icon ui-icon-info" style="float: left; margin-right: 0.3em;"/>
									<strong>Warning:</strong> An image is required before the record can be saved. </p>
							</div>
						</div>
					</xforms:group>
					<xforms:group ref="$binding[not(string(mets:file[@USE='thumbnail']/mets:FLocat/@xlink:href))]">
						<div>
							<xforms:select1 ref="instance('interface-type')" appearance="full">
								<xforms:label>Image Type</xforms:label>
								<xforms:item>
									<xforms:label>Upload from local filesystem</xforms:label>
									<xforms:value>upload</xforms:value>
								</xforms:item>
								<xforms:item>
									<xforms:label>Flickr</xforms:label>
									<xforms:value>flickr</xforms:value>
								</xforms:item>
								<xforms:action ev:event="xforms-value-changed">
									<xforms:action if=". = 'upload'">
										<xforms:toggle case="upload"/>
									</xforms:action>
									<xforms:action if=". = 'flickr'">
										<xforms:toggle case="flickr"/>
									</xforms:action>
								</xforms:action>
							</xforms:select1>
						</div>
						<br/>
						<xforms:switch>
							<xforms:case id="upload">
								<h4>Upload</h4>
								<div style="margin:10px 0 20px 0">
									<fr:upload ref="instance('files-instance')/file" xxforms:size="60">
										<xforms:filename ref="@filename"/>
										<xforms:mediatype ref="@mediatype"/>
										<xxforms:size ref="@size"/>
									</fr:upload>
								</div>

								<xforms:trigger>
									<xforms:label>Upload</xforms:label>
									<xforms:action ev:event="DOMActivate">
										<xforms:send submission="upload-resize"/>
										<xforms:action ev:event="xforms-submit-done" if="contains(instance('files-instance')/file/@mediatype, 'image/')">
											<!-- set URL -->
											<xforms:setvalue ref="$binding/mets:file[@USE='thumbnail']/mets:FLocat/@xlink:href"
												value="concat('media/thumbnail/', substring-after(substring-before(instance('files-instance')/file, '.tmp'), 'xforms_upload_'), '.', substring-after(instance('files-instance')/file/@mediatype, 'image/'))"/>
											<xforms:setvalue ref="$binding/mets:file[@USE='reference']/mets:FLocat/@xlink:href"
												value="concat('media/reference/', substring-after(substring-before(instance('files-instance')/file, '.tmp'), 'xforms_upload_'), '.', substring-after(instance('files-instance')/file/@mediatype, 'image/'))"/>
											<xforms:setvalue ref="$binding/mets:file[@USE='archive']/mets:FLocat/@xlink:href"
												value="concat('media/archive/', substring-after(substring-before(instance('files-instance')/file, '.tmp'), 'xforms_upload_'), '.', substring-after(instance('files-instance')/file/@mediatype, 'image/'))"/>
											<!-- set OWNERID, original filename -->
											<xforms:setvalue ref="$binding/mets:file[@USE='thumbnail']/@OWNERID" value="instance('files-instance')/file/@filename"/>
											<xforms:setvalue ref="$binding/mets:file[@USE='reference']/@OWNERID" value="instance('files-instance')/file/@filename"/>
											<xforms:setvalue ref="$binding/mets:file[@USE='archive']/@OWNERID" value="instance('files-instance')/file/@filename"/>
											<!-- set MIMETYPE -->
											<xforms:setvalue ref="$binding/mets:file[@USE='thumbnail']/@MIMETYPE" value="instance('files-instance')/file/@mediatype"/>
											<xforms:setvalue ref="$binding/mets:file[@USE='reference']/@MIMETYPE" value="instance('files-instance')/file/@mediatype"/>
											<xforms:setvalue ref="$binding/mets:file[@USE='archive']/@MIMETYPE" value="instance('files-instance')/file/@mediatype"/>
											<!-- set CREATED -->
											<xforms:setvalue ref="$binding/mets:file[@USE='thumbnail']/@CREATED" value="$created"/>
											<xforms:setvalue ref="$binding/mets:file[@USE='reference']/@CREATED" value="$created"/>
											<xforms:setvalue ref="$binding/mets:file[@USE='archive']/@CREATED" value="$created"/>
											<!-- set ID -->
											<xforms:setvalue ref="$binding/@ID" value="concat('n_', substring(string(digest( string( random( true ) ), 'MD5', 'hex' )), 1, 8))"/>
											<xforms:setvalue ref="$binding/mets:file[@USE='thumbnail']/@ID"
												value="concat('n_', substring(string(digest( string( random( true ) ), 'MD5', 'hex' )), 1, 8))"/>
											<xforms:setvalue ref="$binding/mets:file[@USE='reference']/@ID"
												value="concat('n_', substring(string(digest( string( random( true ) ), 'MD5', 'hex' )), 1, 8))"/>
											<xforms:setvalue ref="$binding/mets:file[@USE='archive']/@ID"
												value="concat('n_', substring(string(digest( string( random( true ) ), 'MD5', 'hex' )), 1, 8))"/>

											<!-- get base64 encoded file and send it to xml-rpc -->
											<xforms:setvalue ref="instance('url-generator')/url" value="instance('files-instance')/file"/>
											<xforms:insert context="instance('base64-doc')"
												origin="xxforms:call-xpl('oxf:/apps/numishare/xpl/encode-base64.xpl', 'file', instance('url-generator'), 'data')"/>
											<xforms:setvalue ref="instance('call')/params/param[1]/value/base64" value="instance('base64-doc')/document"/>
											<xforms:setvalue ref="instance('new-doc')/document/@content-type" value="instance('base64-doc')/document/@content-type"/>

											<!-- thumbnail -->
											<xforms:setvalue ref="instance('call')/params/param[2]/value/i4" value="instance('config')/images/thumbnail"/>
											<xforms:setvalue ref="instance('call')/params/param[3]/value/i4" value="instance('config')/images/thumbnail"/>
											<xforms:setvalue ref="instance('image-folder')">thumbnail</xforms:setvalue>
											<xforms:send submission="post-to-remotemagick"/>

											<!-- reference -->
											<xforms:setvalue ref="instance('call')/params/param[2]/value/i4" value="instance('config')/images/reference"/>
											<xforms:setvalue ref="instance('call')/params/param[3]/value/i4" value="instance('config')/images/reference"/>
											<xforms:setvalue ref="instance('image-folder')">reference</xforms:setvalue>
											<xforms:send submission="post-to-remotemagick"/>

											<!-- ARCHIVE -->
											<xforms:setvalue ref="instance('image-folder')">archive</xforms:setvalue>
											<xforms:setvalue ref="instance('serialize-config')/directory"
												value="concat(instance('config')/images/absolute_path, 'media/', instance('image-folder'), '/')"/>
											<xforms:setvalue ref="instance('serialize-config')/file"
												value="concat(substring-after(substring-before(instance('files-instance')/file, '.tmp'), 'xforms_upload_'), '.', substring-after(instance('files-instance')/file/@mediatype, 'image/'))"/>
											<!-- copy file from temp to archive folder -->
											<xforms:insert context="instance('dump')"
												origin="xxforms:call-xpl('oxf:/apps/numishare/xpl/archive-file.xpl', ('file', 'serialize-config', 'dump'), (instance('url-generator'), instance('serialize-config'), instance('dump')), 'data')"/>

											<!-- clean up -->
											<xforms:delete context="instance('base64-doc')/document"/>
											<xforms:delete context="instance('dump')/document"/>
										</xforms:action>
									</xforms:action>
								</xforms:trigger>
								<xforms:trigger>
									<xforms:label>Cancel</xforms:label>
									<xforms:action ev:event="DOMActivate">
										<xforms:delete context="$binding"/>
									</xforms:action>
								</xforms:trigger>
							</xforms:case>
							<xforms:case id="flickr">
								<h4>Reference flickr Image</h4>
								<div style="margin:10px 0 20px 0">
									<xforms:input ref="instance('flickr-uri')">
										<xforms:label>URI</xforms:label>
									</xforms:input>
								</div>
								<xforms:trigger>
									<xforms:label>Attach</xforms:label>
									<xforms:action ev:event="DOMActivate">
										<xforms:setvalue ref="instance('photo_id')" value="tokenize(substring-after(instance('flickr-uri'), 'http://'), '/')[4]"/>
										<xforms:send submission="query-flickr" if="number(instance('photo_id'))"/>
										<xforms:dispatch target="parse-error-dialog" name="fr-show" if="not(number(instance('photo_id')))"/>

										<!-- initiate flickr-to-mets processing after submission -->
										<xforms:action ev:event="xforms-submit-done">
											<xforms:action if="instance('flickr-sizes')/@stat='fail'">
												<xforms:dispatch target="flickr-error-dialog" name="fr-show"/>
											</xforms:action>
											<xforms:action if="instance('flickr-sizes')/@stat='ok'">
												<!-- delete archive -->
												<xforms:delete nodeset="$binding/mets:file[@USE='archive']"/>
												<!-- delete OWNERID -->
												<xforms:delete nodeset="$binding/descendant::mets:file/@OWNERID"/>
												<!-- delete CREATED -->
												<xforms:delete nodeset="$binding/descendant::mets:file/@CREATED"/>

												<!-- set URL -->
												<xforms:setvalue ref="$binding/mets:file[@USE='thumbnail']/mets:FLocat/@xlink:href"
													value="instance('flickr-sizes')/sizes/size[@label='Thumbnail']/@source"/>
												<xforms:setvalue ref="$binding/mets:file[@USE='reference']/mets:FLocat/@xlink:href" value="instance('flickr-sizes')/sizes/size[@label='Medium']/@source"/>

												<!-- set MIMETYPE -->
												<xforms:setvalue ref="$binding/mets:file[@USE='thumbnail']/@MIMETYPE" value="'image/jpeg'"/>
												<xforms:setvalue ref="$binding/mets:file[@USE='reference']/@MIMETYPE" value="'image/jpeg'"/>

												<!-- set ID -->
												<xforms:setvalue ref="$binding/@ID" value="concat('n_', substring(string(digest( string( random( true ) ), 'MD5', 'hex' )), 1, 8))"/>
												<xforms:setvalue ref="$binding/mets:file[@USE='thumbnail']/@ID"
													value="concat('n_', substring(string(digest( string( random( true ) ), 'MD5', 'hex' )), 1, 8))"/>
												<xforms:setvalue ref="$binding/mets:file[@USE='reference']/@ID"
													value="concat('n_', substring(string(digest( string( random( true ) ), 'MD5', 'hex' )), 1, 8))"/>
											</xforms:action>
										</xforms:action>
									</xforms:action>
								</xforms:trigger>
								<xforms:trigger>
									<xforms:label>Cancel</xforms:label>
									<xforms:action ev:event="DOMActivate">
										<xforms:delete context="$binding"/>
									</xforms:action>
								</xforms:trigger>

								<fr:alert-dialog id="parse-error-dialog">
									<fr:label>Parsing Error</fr:label>
									<fr:message>Error parsing flickr URI.</fr:message>
									<fr:neutral-choice/>
								</fr:alert-dialog>

								<fr:alert-dialog id="flickr-error-dialog">
									<fr:label>flickr Service Error</fr:label>
									<fr:message>
										<xforms:output ref="instance('flickr-sizes')/err/@msg"/>
									</fr:message>
									<fr:neutral-choice/>
								</fr:alert-dialog>
							</xforms:case>
							<xforms:case id="error">
								<xforms:group ref="$binding[not(instance('flickr-response')/@stat='ok') and instance('control-instance')/remotemagick-available='false']">
									<div class="ui-widget">
										<div class="ui-state-error ui-corner-all">
											<p>
												<span class="ui-icon ui-icon-alert" style="float: left; margin-right: 0.3em;"/>
												<strong>Alert:</strong> Imagemagick is disabled and no flickr API key has been entered. Image uploading is impossible. Contact server administrator for
												help.</p>
										</div>
									</div>
									<xforms:trigger>
										<xforms:label>Cancel</xforms:label>
										<xforms:action ev:event="DOMActivate">
											<xforms:delete context="$binding"/>
										</xforms:action>
									</xforms:trigger>
								</xforms:group>
							</xforms:case>
						</xforms:switch>

					</xforms:group>

					<!-- thumbnail -->
					<xforms:group ref="$binding[string-length(mets:file[@USE='thumbnail']/mets:FLocat/@xlink:href) &gt; 0]">
						<!-- concatonate thumbnail path -->
						<xforms:var name="thumbnail-path" select="if (contains(mets:file[@USE='thumbnail']/mets:FLocat/@xlink:href, 'http://')) then mets:file[@USE='thumbnail']/mets:FLocat/@xlink:href else concat(instance('config')/url, mets:file[@USE='thumbnail']/mets:FLocat/@xlink:href)"/>
						<div class="subsection">
							<h4>Image</h4>
							<xforms:trigger appearance="minimal">
								<xforms:action ev:event="DOMActivate">
									<xforms:dispatch target="delete-image-dialog" name="fr-show" if="not(contains(mets:file[@USE='thumbnail']/mets:FLocat/@xlink:href, 'flickr.com'))"/>
									<xforms:dispatch target="delete-flickr-dialog" name="fr-show" if="contains(mets:file[@USE='thumbnail']/mets:FLocat/@xlink:href, 'flickr.com')"/>
								</xforms:action>

								<xforms:label>
									<span class="glyphicon glyphicon-remove"/>
								</xforms:label>
							</xforms:trigger>
							<div>
								<xforms:output mediatype="image/*" value="$thumbnail-path"/>
							</div>
							<fr:alert-dialog id="delete-flickr-dialog">
								<fr:label>Remove Image</fr:label>
								<fr:message>Remove associated flickr images? They will not be permanently deleted from flickr.com.</fr:message>
								<fr:negative-choice>
									<fr:label>Cancel</fr:label>
								</fr:negative-choice>
								<fr:positive-choice>
									<fr:label>OK</fr:label>
									<xforms:action ev:event="DOMActivate">
										<xforms:delete nodeset="$binding"/>
									</xforms:action>
								</fr:positive-choice>
							</fr:alert-dialog>
							<fr:alert-dialog id="delete-image-dialog">
								<fr:label>Delete Image</fr:label>
								<fr:message> Are you certain you wish to remove this image? Its reference will be removed from the document and files from the server. </fr:message>
								<fr:negative-choice/>
								<fr:positive-choice>
									<xforms:action ev:event="DOMActivate">
										<!-- get filename -->
										<xforms:setvalue ref="instance('delete-config')/delete/file"
											value="substring-after($binding/mets:file[@USE='thumbnail']/mets:FLocat/@xlink:href, 'media/thumbnail/')"/>
										<!-- thumbnail -->
										<xforms:setvalue ref="instance('delete-config')/delete/directory" value="concat(instance('config')/images/absolute_path, 'media/thumbnail')"/>
										<xforms:insert context="instance('dump')"
											origin="xxforms:call-xpl('oxf:/apps/numishare/xpl/remove-image.xpl', ('delete-config', 'dump'), (instance('delete-config'), instance('dump')), 'data')"/>
										<!-- reference -->
										<xforms:setvalue ref="instance('delete-config')/delete/directory" value="concat(instance('config')/images/absolute_path, 'media/reference')"/>
										<xforms:insert context="instance('dump')"
											origin="xxforms:call-xpl('oxf:/apps/numishare/xpl/remove-image.xpl', ('delete-config', 'dump'), (instance('delete-config'), instance('dump')), 'data')"/>
										<!-- ARCHIVE -->
										<xforms:setvalue ref="instance('delete-config')/delete/directory" value="concat(instance('config')/images/absolute_path, 'media/archive')"/>
										<xforms:insert context="instance('dump')"
											origin="xxforms:call-xpl('oxf:/apps/numishare/xpl/remove-image.xpl', ('delete-config', 'dump'), (instance('delete-config'), instance('dump')), 'data')"/>
										<xforms:delete nodeset="$binding"/>
									</xforms:action>
								</fr:positive-choice>
							</fr:alert-dialog>
						</div>
					</xforms:group>

					<!-- load config -->
					<xforms:action ev:event="xforms-enabled">
						<!-- put conditional to make sure submissions only fire one time -->
						<xforms:send submission="load-config" if="not(string(instance('config')/title))"/>
						<xforms:send submission="test-remotemagick"
							if="not(string(instance('test-response')/params/param/value/string) or instance('control-instance')/remotemagick-available = 'false')"/>

						<!-- set cases -->
						<xforms:setvalue ref="instance('interface-type')" value="'flickr'" if="instance('control-instance')/remotemagick-available = 'false' and instance('flickr-response')/@stat='ok'"/>
						<xforms:toggle case="error" if="instance('control-instance')/remotemagick-available = 'false' and not(instance('flickr-response')/@stat='ok')"/>
					</xforms:action>
					<!-- ********************************************************************** -->
					<!-- ***********************  DIALOG INTERNAL MODEL *********************** -->
					<xforms:model id="file-upload-model" xmlns:xi="http://www.w3.org/2001/XInclude">
						<!-- exist URL is stored in an XML file -->
						<xforms:instance id="exist-config">
							<xi:include href="../../../exist-config.xml"/>
						</xforms:instance>

						<xforms:instance id="control-instance">
							<control xmlns="">
								<simple-upload-trigger/>
								<add-upload-trigger/>
								<remove-upload-trigger/>
								<remotemagick-available/>
								<collection-name/>
							</control>
						</xforms:instance>

						<!-- collections/authentication instances -->
						<xforms:instance id="collections-list">
							<collections xmlns="">
								<collection roll="admin" name="numishare"/>
							</collections>
						</xforms:instance>

						<!-- site info -->
						<xforms:instance id="config">
							<config xmlns=""/>
						</xforms:instance>

						<xforms:instance id="interface-type">
							<type xmlns="">upload</type>
						</xforms:instance>

						<xforms:instance id="flickr-response">
							<rsp xmlns=""/>
						</xforms:instance>

						<!-- URI for flickr image -->
						<xforms:instance id="flickr-uri">
							<uri xmlns=""/>
						</xforms:instance>

						<xforms:instance id="photo_id">
							<photo_id xmlns=""/>
						</xforms:instance>

						<xforms:instance id="flickr-sizes">
							<rsp xmlns=""/>
						</xforms:instance>

						<!-- FILE UPLOADS -->
						<xforms:instance id="files-instance">
							<!-- Start with placeholders for three files -->
							<files xmlns="">
								<file xsi:type="xs:anyURI" filename="" mediatype="" size=""/>
							</files>
						</xforms:instance>

						<xforms:instance id="file-template">
							<file xsi:type="xs:anyURI" filename="" mediatype="" size=""/>
						</xforms:instance>

						<!-- image uploading, base64 encoding and xml-rpc payload -->
						<xforms:instance id="url-generator">
							<config xmlns="">
								<url/>
								<content-type>image/jpeg</content-type>
							</config>
						</xforms:instance>

						<xforms:instance id="base64-doc">
							<file xmlns=""/>
						</xforms:instance>

						<xforms:instance id="new-doc">
							<file xmlns="">
								<document xsi:type="xs:base64Binary" content-type=""/>
							</file>
						</xforms:instance>

						<xforms:instance id="dump">
							<dump xmlns=""/>
						</xforms:instance>

						<xforms:instance id="serialize-config">
							<config xmlns="">
								<directory/>
								<file/>
								<make-directories>false</make-directories>
								<append>false</append>
							</config>
						</xforms:instance>

						<xforms:instance id="delete-config">
							<config xmlns="">
								<delete>
									<file/>
									<directory/>
								</delete>
							</config>
						</xforms:instance>

						<xforms:instance id="image-folder">
							<folder xmlns=""/>
						</xforms:instance>

						<xforms:instance id="test-call">
							<methodCall>
								<methodName>test</methodName>
							</methodCall>
						</xforms:instance>

						<xforms:instance id="test-response">
							<methodResponse xmlns=""/>
						</xforms:instance>

						<xforms:instance id="call">
							<methodCall xmlns="">
								<methodName>resize</methodName>
								<params>
									<param>
										<value>
											<base64/>
										</value>
									</param>
									<param>
										<value>
											<i4/>
										</value>
									</param>
									<param>
										<value>
											<i4/>
										</value>
									</param>
								</params>
							</methodCall>
						</xforms:instance>

						<xforms:instance id="response">
							<response/>
						</xforms:instance>

						<xforms:instance id="image-side">
							<side xmlns=""/>
						</xforms:instance>

						<xforms:bind nodeset="instance('interface-type')" readonly="not(instance('flickr-response')/@stat='ok') or instance('control-instance')/remotemagick-available= 'false'"/>

						<!-- Get obverse file upload, encode it in base64 to include in xml-rpc payload to send to be resized -->
						<xforms:submission id="upload-resize" method="post" replace="none" resource="test:"/>

						<xforms:submission id="post-to-remotemagick" method="post" replace="instance" instance="response" action="http://localhost:8042/RPC2" ref="instance('call')">
							<xforms:action ev:event="xforms-submit-done">
								<xforms:setvalue ref="instance('new-doc')/document" value="instance('response')/params/param/value/string"/>

								<!-- set serialize config values-->
								<xforms:setvalue ref="instance('serialize-config')/directory" value="concat(instance('config')/images/absolute_path, 'media/', instance('image-folder'), '/')"/>
								<xforms:setvalue ref="instance('serialize-config')/file"
									value="concat(substring-after(substring-before(instance('files-instance')/file, '.tmp'), 'xforms_upload_'), '.', substring-after(instance('files-instance')/file/@mediatype, 'image/'))"/>

								<!-- serialize new base64 encoded thumbnail into a file -->
								<xforms:insert context="instance('dump')"
									origin="xxforms:call-xpl('oxf:/apps/numishare/xpl/serialize-base64.xpl', ('document', 'dump', 'serialize-config'), (instance('new-doc')/document, instance('dump'), instance('serialize-config')), 'data')"/>

								<!-- clean up -->
								<xforms:delete context="instance('dump')/document"/>
							</xforms:action>
						</xforms:submission>

						<xforms:submission id="load-collections" serialization="none" method="get" action="{instance('exist-config')/url}collections-list.xml" replace="instance" instance="collections-list"
							xxforms:username="{instance('exist-config')/username}" xxforms:password="{instance('exist-config')/password}">
							<!-- if the config loads successfully, set the collection names based on authentication -->
							<xforms:action ev:event="xforms-submit-done">
								<!-- set default if security is false -->
								<xforms:action if="not(string(instance('control-instance')/request-security/role))">
									<xforms:setvalue ref="instance('control-instance')/collection-name">numishare</xforms:setvalue>
								</xforms:action>
								<!-- if there is a security role, set the collection-name value if it is in the list, otherwise set new collection name -->
								<xforms:action if="string(instance('control-instance')/request-security/role)">
									<xforms:action if="string(instance('collections-list')/collection[@role=instance('control-instance')/request-security/role]/@name)">
										<xforms:setvalue ref="instance('control-instance')/collection-name"
											value="instance('collections-list')/collection[@role=instance('control-instance')/request-security/role]/@name"/>
									</xforms:action>
								</xforms:action>
								<xforms:send submission="load-config"/>
							</xforms:action>
							<!-- if the config has not been created (given that the URL in ../exist-config.xml is correct), create it -->
							<xforms:message ev:event="xforms-submit-error" level="modal">Unable to load Numishare collections list.</xforms:message>
						</xforms:submission>

						<!-- get image dimensions from config -->
						<xforms:submission id="load-config" serialization="none" method="get" action="{instance('exist-config')/url}{instance('control-instance')/collection-name}/config.xml"
							xxforms:username="{instance('exist-config')/username}" xxforms:password="{instance('exist-config')/password}" replace="instance" instance="config">
							<xforms:message ev:event="xforms-submit-error" level="modal">Unable to load Numishare configuration</xforms:message>

							<!-- if there is a string for flickr_api_key, execute the test API query to certify that the key is valid. -->
							<xforms:send submission="test-for-echo" ev:event="xforms-submit-done" if="string(instance('config')/flickr_api_key)"/>
						</xforms:submission>

						<!-- query flickr.photos.getSizes API -->
						<xforms:submission id="query-flickr" serialization="none" method="get"
							action="https://api.flickr.com/services/rest/?method=flickr.photos.getSizes&amp;photo_id={instance('photo_id')}&amp;api_key={instance('config')/flickr_api_key}"
							replace="instance" instance="flickr-sizes"/>

						<!-- test for flickr echo -->
						<xforms:submission id="test-for-echo" serialization="none" method="get"
							action="https://api.flickr.com/services/rest/?method=flickr.test.echo&amp;api_key={instance('config')/flickr_api_key}" replace="instance" instance="flickr-response">
							<xforms:message ev:event="xforms-submit-error" level="modal">Error querying flickr. Please check internet connection.</xforms:message>
						</xforms:submission>

						<!-- test for remotemagick echo -->
						<xforms:submission id="test-remotemagick" method="post" replace="instance" instance="test-response" ref="instance('test-call')" action="http://localhost:8042/RPC2">
							<xforms:setvalue ev:event="xforms-submit-error" ref="instance('control-instance')/remotemagick-available">true</xforms:setvalue>
						</xforms:submission>
					</xforms:model>
				</xforms:group>
			</xforms:group>
		</xbl:template>
	</xbl:binding>
</xbl:xbl>
